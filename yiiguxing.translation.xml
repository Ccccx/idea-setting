<application>
  <component name="AppStorage">
    <histories>
      <item value="rush" />
      <item value="Returns the least significant 64 bits of this UUID's 128 bit value." />
      <item value="Constructs a new {@code UUID} using the specified data. {@code * mostSigBits} is used for the most significant 64 bits of the {@code * UUID} and {@code leastSigBits} becomes the least significant 64 bits of * the {@code UUID}." />
      <item value="The most significant bits of the {@code UUID}" />
      <item value="UUID" />
      <item value="A simple {@link IdGenerator} that starts at 1 and increments by 1 with each call." />
      <item value="sequence" />
      <item value="squence" />
      <item value="distributed-id" />
      <item value="nacos" />
      <item value="set Entity Resolver" />
      <item value="序列" />
      <item value="count" />
      <item value="sum" />
      <item value="生成" />
      <item value="Gennerator" />
      <item value="ID Gennerator" />
      <item value="suffix" />
      <item value="尾缀" />
      <item value="前缀" />
      <item value="ID Pattern" />
      <item value="图案" />
      <item value="格式" />
      <item value="Patener" />
      <item value="exclude" />
      <item value="beans Of Type Including Ancestors" />
      <item value="* Modify the application context's internal bean factory after its standard * initialization. All bean definitions will have been loaded, but no beans * will have been instantiated yet. This allows for overriding or adding * properties even to eager-initializing beans." />
      <item value="initializing" />
      <item value="inventory" />
      <item value="new Singleton" />
      <item value="We're assumably within a circular reference." />
      <item value="Fail if we're already creating this bean instance:" />
      <item value="Map of singleton and non-singleton bean names, keyed by dependency type." />
      <item value="determine Highest Priority Candidate" />
      <item value="* Scope identifier for the standard prototype scope: {@value}. * &lt;p&gt;Custom scopes can be added via {@code registerScope}." />
      <item value="Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port." />
      <item value="Communications" />
      <item value="Invoker" />
      <item value="the interface or abstract class representing the factory" />
      <item value="obtain Fresh Bean Factory" />
      <item value="Initialize any placeholder property sources in the context environment." />
      <item value="resolve Required Placeholders" />
      <item value="Set the config locations for this application context. * &lt;p&gt;If not set, the implementation may use a default as appropriate." />
      <item value="helmet" />
      <item value="扫描" />
      <item value="performance" />
      <item value="dodgy code" />
      <item value="may expose internal representation by storing an externally mutable object into" />
      <item value="Priority" />
      <item value="vulnerability" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1393" />
        <entry key="ENGLISH" value="1527" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="19" />
        <entry key="FILIPINO" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="MALTESE" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SPANISH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ad5b78ae4e20181" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>