<application>
  <component name="AppStorage">
    <histories>
      <item value="MouseGestures" />
      <item value="MouseGestures-1.2" />
      <item value="tutorial" />
      <item value="Allatori" />
      <item value="Obfuscation" />
      <item value="communal" />
      <item value="common" />
      <item value="packet" />
      <item value="mark Reader Index" />
      <item value="destroy Buf" />
      <item value="free" />
      <item value="statistics" />
      <item value="统计" />
      <item value="* Enhance a {@link Bean @Bean} method to check the supplied BeanFactory for the * existence of this bean object. * @throws Throwable as a catch-all for any exception that may be thrown when invoking the * super implementation of the proxied method i.e., the actual {@code @Bean} method" />
      <item value="is Currently Invoked Factory Method" />
      <item value="resolve Bean Reference" />
      <item value="电压" />
      <item value="线路方向" />
      <item value="sql Segments" />
      <item value="is Synthetic" />
      <item value="Field Aware Constructor Parameter" />
      <item value="A single data class constructor -&gt; resolve constructor arguments from request parameters." />
      <item value="Global methods first" />
      <item value="create Async Web Request" />
      <item value="do Dispatch" />
      <item value="usage rate" />
      <item value="使用率" />
      <item value="detail" />
      <item value="charge" />
      <item value="充电" />
      <item value="decrypt By Public Key" />
      <item value="ALLATOR Ix DEMO" />
      <item value="erase Credentials After Authentication" />
      <item value="// Store the HTTP request itself. Used by // AbstractAuthenticationProcessingFilter // for redirection after successful authentication (SEC-29)" />
      <item value="commence" />
      <item value="// Don't initialize filter bean on init()" />
      <item value="// Fetch Spring root application context and initialize the delegate early, // if possible. If the root application context will be started after this // filter proxy, we'll have to resort to lazy initialization." />
      <item value="Generic Filter Bean" />
      <item value="security" />
      <item value="disable Local Configure Authentication Bldr" />
      <item value="authentication Manager Initialized" />
      <item value="/ Initialize other special beans in specific context subclasses." />
      <item value="get Valid Document Root" />
      <item value="No Descriptor Registry" />
      <item value="DISPATCHER SERVLET NAME" />
      <item value="Mark the underlying source as seen in case it wraps an existing bean" />
      <item value="Servlet Context Initializer Beans" />
      <item value="invocable Method" />
      <item value="retrieve" />
      <item value="utility room" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2438" />
        <entry key="ENGLISH" value="2670" />
        <entry key="POLISH" value="2" />
        <entry key="GERMAN" value="3" />
        <entry key="FRENCH" value="19" />
        <entry key="FILIPINO" value="2" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="1" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="4" />
        <entry key="HINDI" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ad5b78ae4e20181" />
      </youdao-translate>
    </option>
  </component>
</application>