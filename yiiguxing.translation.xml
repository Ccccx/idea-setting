<application>
  <component name="AppStorage">
    <histories>
      <item value="* A ConfigurationValueProvider implementation that looks for overriding values in system properties. * Looks for system properties in the format &quot;NAMESPACE.PROPERTY_NAME&quot;." />
      <item value="wrong number of arguments" />
      <item value="Instantiation Exception" />
      <item value="do Privileged" />
      <item value="include System Classpath" />
      <item value="LoggerFactory is not a Logback LoggerContext but Logback is on the classpath." />
      <item value="* Returns a brief description of this potion. The exact details * of the representation are unspecified and subject to change," />
      <item value=" Suppress default constructor for noninstantiability" />
      <item value="default Catalog Name" />
      <item value="full Sql" />
      <item value="条件" />
      <item value="* Temporarily store this position and use it in the following * nextToken() method only if the delimiters haven't been changed in * that nextToken() invocation." />
      <item value="next Token" />
      <item value="* Specifies whether the parameter can accept multiple values by having multiple occurrences." />
      <item value="通过" />
      <item value="do Migration" />
      <item value="Set (hopefully) sensible defaults for command line parameters" />
      <item value="reconfigure Logging" />
      <item value="重定向" />
      <item value="Liquibase" />
      <item value="generator" />
      <item value="自定义" />
      <item value="Validate" />
      <item value="验证" />
      <item value="Put things back" />
      <item value="executor" />
      <item value="options must start with a '--'" />
      <item value="Please set liquibaseProLicenseKey on command line or in liquibase.properties to use Liquibase Pro features." />
      <item value="No Liquibase Pro license key supplied. Please set liquibaseProLicenseKey on command line or in liquibase.properties to use Liquibase Pro features." />
      <item value="Unexpected" />
      <item value="Unexpected command paramete" />
      <item value="get Absolute File" />
      <item value="NOOP SESSION CONTEXT" />
      <item value="NOOP" />
      <item value="* Open a property file that is embedded as a Java resource and parse it." />
      <item value="Path Matching Resource Pattern Resolver" />
      <item value="* Search for both liquibase.properties (or whatever the name of the current * defaultsFile is) and the &quot;local&quot; variant liquibase.local.properties. The contents of the local * variant overwrite parameters with the same name in the regular properties file." />
      <item value="display" />
      <item value="* Events of this type are either sent to an object that implements * {@link HttpSessionBindingListener} when it is bound or unbound from a * session, or to an {@link HttpSessionAttributeListener} that has been * configured in the deployment descriptor when any attribute is bound, unbound * or replaced in a session." />
      <item value="get Absolute Path" />
      <item value="plan" />
      <item value="reversed" />
      <item value="/ Register as ServletContext attribute, for ContextCleanupListener to detect it." />
      <item value="the corresponding autowired value. This may also be an * implementation of the {@link org.springframework.beans.factory.ObjectFactory} * interface, which allows for lazy resolution of the actual target value." />
      <item value="the dependency type to register. This will typically * be a base interface such as BeanFactory, with extensions of it resolved * as well if declared as an autowiring dependency (e.g. ListableBeanFactory), * as long as the given value actually implements the extended interface." />
      <item value="适配" />
      <item value="Adpat" />
      <item value="REVERSE" />
      <item value="BINARYSEARCH" />
      <item value="* Tuning parameters for algorithms - Many of the List algorithms have * two implementations, one of which is appropriate for RandomAccess * lists, the other for &quot;sequential.&quot; Often, the random access variant * yields better performance on small sequential access lists. The * tuning parameters below determine the cutoff point for what constitutes * a &quot;small&quot; sequential access list for each algorithm. The values below * were empirically determined to work well for LinkedList. Hopefully * they should be reasonable for other sequential access List * implementations. Those doing performance work on this code would * do well to validate the values of these parameters from time to time. * (The first word of each tuning parameter name is the algorithm to which * it applies.)" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2557" />
        <entry key="ENGLISH" value="2802" />
        <entry key="POLISH" value="2" />
        <entry key="GERMAN" value="3" />
        <entry key="FRENCH" value="19" />
        <entry key="FILIPINO" value="2" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="1" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="4" />
        <entry key="HINDI" value="4" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2942e6d3483f55d2" />
      </youdao-translate>
    </option>
  </component>
</application>