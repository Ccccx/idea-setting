<application>
  <component name="ProjectManager">
    <defaultProject>
      <component name="BookmarkManager">
        <bookmark url="jar://$MAVEN_REPOSITORY$/io/spring/initializr/initializr-web/0.9.0.BUILD-SNAPSHOT/initializr-web-0.9.0.BUILD-SNAPSHOT-sources.jar!/io/spring/initializr/web/project/DefaultProjectRequestToDescriptionConverter.java" description="resolvedDependencies.forEach((dep) -&gt; {" line="212" />
      </component>
      <component name="Encoding" defaultCharsetForPropertiesFiles="UTF-8">
        <file url="PROJECT" charset="UTF-8" />
      </component>
      <component name="Git.Settings">
        <option name="ROOT_SYNC" value="DONT_SYNC" />
      </component>
      <component name="GradleLocalSettings">
        <option name="modificationStamps">
          <map>
            <entry key="D:/IDEA/spring-framework/spring-framework" value="3024072743245" />
            <entry key="D:/IDEA/spring/spring-framework" value="3024186391472" />
          </map>
        </option>
        <option name="projectSyncType">
          <map>
            <entry key="E:/IDEA/spring" value="PREVIEW" />
          </map>
        </option>
      </component>
      <component name="JUnitGeneratorProjectSettings">
        <option name="generateForOverloadedMethods" value="false" />
        <option name="outputFilePattern" value="${SOURCEPATH}/../../test/java/${PACKAGE}/${FILENAME}" />
        <option name="selectedTemplateKey" value="JUnit 4" />
        <option name="vmTemplates">
          <map>
            <entry key="JUnit 3" value="######################################################################################## &#10;## &#10;## Available variables: &#10;##         $entryList.methodList - List of method composites &#10;##         $entryList.privateMethodList - List of private method composites &#10;##         $entryList.fieldList - ArrayList of class scope field names &#10;##         $entryList.className - class name &#10;##         $entryList.packageName - package name &#10;##         $today - Todays date in MM/dd/yyyy format &#10;## &#10;##            MethodComposite variables: &#10;##                $method.name - Method Name &#10;##                $method.signature - Full method signature in String form &#10;##                $method.reflectionCode - list of strings representing commented out reflection code to access method (Private Methods) &#10;##                $method.paramNames - List of Strings representing the method's parameters' names &#10;##                $method.paramClasses - List of Strings representing the method's parameters' classes &#10;## &#10;## You can configure the output class name using &quot;testClass&quot; variable below. &#10;## Here are some examples: &#10;## Test${entry.ClassName} - will produce TestSomeClass &#10;## ${entry.className}Test - will produce SomeClassTest &#10;## &#10;######################################################################################## &#10;## &#10;#macro (cap $strIn)$strIn.valueOf($strIn.charAt(0)).toUpperCase()$strIn.substring(1)#end &#10;## Iterate through the list and generate testcase for every entry. &#10;#foreach ($entry in $entryList) &#10;#set( $testClass=&quot;${entry.className}Test&quot;) &#10;## &#10;package test.$entry.packageName; &#10;&#10;import junit.framework.Test; &#10;import junit.framework.TestSuite; &#10;import junit.framework.TestCase; &#10;&#10;/** &#10;* ${entry.className} Tester. &#10;* &#10;* @author &lt;Authors name&gt; &#10;* @since &lt;pre&gt;$today&lt;/pre&gt; &#10;* @version 1.0 &#10;*/ &#10;public class $testClass extends TestCase { &#10;public $testClass(String name) { &#10;super(name); &#10;} &#10;&#10;public void setUp() throws Exception { &#10;super.setUp(); &#10;} &#10;&#10;public void tearDown() throws Exception { &#10;super.tearDown(); &#10;} &#10;&#10;#foreach($method in $entry.methodList) &#10;/** &#10;* &#10;* Method: $method.signature &#10;* &#10;*/ &#10;public void test#cap(${method.name})() throws Exception { &#10;//TODO: Test goes here... &#10;} &#10;&#10;#end &#10;&#10;#foreach($method in $entry.privateMethodList) &#10;/** &#10;* &#10;* Method: $method.signature &#10;* &#10;*/ &#10;public void test#cap(${method.name})() throws Exception { &#10;//TODO: Test goes here... &#10;#foreach($string in $method.reflectionCode) &#10;$string &#10;#end &#10;} &#10;&#10;#end &#10;&#10;public static Test suite() { &#10;return new TestSuite(${testClass}.class); &#10;} &#10;} &#10;#end" />
            <entry key="JUnit 4" value="######################################################################################## &#10;## &#10;## Available variables: &#10;##         $entryList.methodList - List of method composites &#10;##         $entryList.privateMethodList - List of private method composites &#10;##         $entryList.fieldList - ArrayList of class scope field names &#10;##         $entryList.className - class name &#10;##         $entryList.packageName - package name &#10;##         $today - Todays date in MM/dd/yyyy format &#10;## &#10;##            MethodComposite variables: &#10;##                $method.name - Method Name &#10;##                $method.signature - Full method signature in String form &#10;##                $method.reflectionCode - list of strings representing commented out reflection code to access method (Private Methods) &#10;##                $method.paramNames - List of Strings representing the method's parameters' names &#10;##                $method.paramClasses - List of Strings representing the method's parameters' classes &#10;## &#10;## You can configure the output class name using &quot;testClass&quot; variable below. &#10;## Here are some examples: &#10;## Test${entry.ClassName} - will produce TestSomeClass &#10;## ${entry.className}Test - will produce SomeClassTest &#10;## &#10;######################################################################################## &#10;## &#10;#macro (cap $strIn)$strIn.valueOf($strIn.charAt(0)).toUpperCase()$strIn.substring(1)#end &#10;## Iterate through the list and generate testcase for every entry. &#10;#foreach ($entry in $entryList) &#10;#set( $testClass=&quot;${entry.className}Test&quot;) &#10;## &#10;package test.java.$entry.packageName; &#10;&#10;import org.junit.Test; &#10;import org.junit.Before; &#10;import org.junit.After; &#10;&#10;/** &#10;* ${entry.className} Tester. &#10;* &#10;* @author chengjinzhou&#10;* @since $today&#10;* @version 1.0 &#10;*/ &#10;public class $testClass { &#10;&#10;@Before&#10;public void before() throws Exception { &#10;} &#10;&#10;@After&#10;public void after() throws Exception { &#10;} &#10;&#10;#foreach($method in $entry.methodList) &#10;/** &#10;* &#10;* Method: $method.signature &#10;* &#10;*/ &#10;@Test&#10;public void test#cap(${method.name})() throws Exception { &#10; &#10;} &#10;&#10;#end &#10;&#10;#foreach($method in $entry.privateMethodList) &#10;/** &#10;* &#10;* Method: $method.signature &#10;* &#10;*/ &#10;@Test&#10;public void test#cap(${method.name})() throws Exception { &#10; &#10;#foreach($string in $method.reflectionCode) &#10;$string &#10;#end &#10;} &#10;&#10;#end &#10;} &#10;#end" />
          </map>
        </option>
      </component>
      <component name="JavaScriptSettings">
        <option name="languageLevel" value="ES5" />
      </component>
      <component name="JsFlowSettings">
        <service-enabled>true</service-enabled>
        <exe-path />
        <other-services-enabled>true</other-services-enabled>
        <auto-save>true</auto-save>
      </component>
      <component name="Kotlin2JsCompilerArguments">
        <option name="sourceMapEmbedSources" />
      </component>
      <component name="MavenImportPreferences">
        <option name="generalSettings">
          <MavenGeneralSettings>
            <option name="mavenHome" value="D:/software/apache-maven-3.6.0" />
            <option name="userSettingsFile" value="D:\software\apache-maven-3.6.0\conf\settings.xml" />
          </MavenGeneralSettings>
        </option>
        <option name="importingSettings">
          <MavenImportingSettings>
            <option name="downloadDocsAutomatically" value="true" />
            <option name="downloadSourcesAutomatically" value="true" />
            <option name="importAutomatically" value="true" />
            <option name="vmOptionsForImporter" value="-Xmx768m" />
          </MavenImportingSettings>
        </option>
      </component>
      <component name="MavenRunner">
        <option name="jreName" value="1.8" />
        <option name="skipTests" value="true" />
      </component>
      <component name="ProjectDictionaryState">
        <dictionary name="cx521" />
      </component>
      <component name="ProjectInspectionProfilesVisibleTreeState">
        <entry key="Project Default">
          <profile-state>
            <expanded-state>
              <State />
              <State>
                <id>Abstraction issuesJava</id>
              </State>
              <State>
                <id>ActionScript specificJavaScript</id>
              </State>
              <State>
                <id>Ali-Check</id>
              </State>
              <State>
                <id>Ant</id>
              </State>
              <State>
                <id>Assignment issuesGroovy</id>
              </State>
              <State>
                <id>Assignment issuesJava</id>
              </State>
              <State>
                <id>Batch Applications</id>
              </State>
              <State>
                <id>CFML</id>
              </State>
              <State>
                <id>CSS</id>
              </State>
              <State>
                <id>Class metricsJava</id>
              </State>
              <State>
                <id>Class structureJava</id>
              </State>
              <State>
                <id>Cloning issuesJava</id>
              </State>
              <State>
                <id>Code maturityJava</id>
              </State>
              <State>
                <id>Code quality toolsCSS</id>
              </State>
              <State>
                <id>Code quality toolsJavaScript</id>
              </State>
              <State>
                <id>Code style issuesJava</id>
              </State>
              <State>
                <id>CoffeeScript</id>
              </State>
              <State>
                <id>Control flow issuesJava</id>
              </State>
              <State>
                <id>Control flow issuesJavaScript</id>
              </State>
              <State>
                <id>Cucumber</id>
              </State>
              <State>
                <id>Data flowJava</id>
              </State>
              <State>
                <id>Data flowJavaScript</id>
              </State>
              <State>
                <id>Declaration redundancyJava</id>
              </State>
              <State>
                <id>DeclarationGroovy</id>
              </State>
              <State>
                <id>EditorConfig</id>
              </State>
              <State>
                <id>EncapsulationJava</id>
              </State>
              <State>
                <id>Error handlingGroovy</id>
              </State>
              <State>
                <id>Error handlingJava</id>
              </State>
              <State>
                <id>Error handlingJavaScript</id>
              </State>
              <State>
                <id>Faces Model</id>
              </State>
              <State>
                <id>FinalizationJava</id>
              </State>
              <State>
                <id>Flow type checkerJavaScript</id>
              </State>
              <State>
                <id>FreeMarker</id>
              </State>
              <State>
                <id>General</id>
              </State>
              <State>
                <id>GeneralCoffeeScript</id>
              </State>
              <State>
                <id>GeneralJava</id>
              </State>
              <State>
                <id>GeneralJavaScript</id>
              </State>
              <State>
                <id>Google Web Toolkit</id>
              </State>
              <State>
                <id>Gradle</id>
              </State>
              <State>
                <id>Groovy</id>
              </State>
              <State>
                <id>Guice</id>
              </State>
              <State>
                <id>HTML</id>
              </State>
              <State>
                <id>Hibernate</id>
              </State>
              <State>
                <id>Ignore</id>
              </State>
              <State>
                <id>ImportsJava</id>
              </State>
              <State>
                <id>Inheritance issuesJava</id>
              </State>
              <State>
                <id>InitializationJava</id>
              </State>
              <State>
                <id>Internationalization</id>
              </State>
              <State>
                <id>InternationalizationJava</id>
              </State>
              <State>
                <id>Invalid elementsCSS</id>
              </State>
              <State>
                <id>J2ME issuesJava</id>
              </State>
              <State>
                <id>JSON and JSON5</id>
              </State>
              <State>
                <id>JSP</id>
              </State>
              <State>
                <id>JUnitJava</id>
              </State>
              <State>
                <id>Java</id>
              </State>
              <State>
                <id>Java 11Java language level migration aidsJava</id>
              </State>
              <State>
                <id>Java 5Java language level migration aidsJava</id>
              </State>
              <State>
                <id>Java 8Java language level migration aidsJava</id>
              </State>
              <State>
                <id>Java interop issuesKotlin</id>
              </State>
              <State>
                <id>Java language level migration aidsJava</id>
              </State>
              <State>
                <id>JavaBeans issuesJava</id>
              </State>
              <State>
                <id>JavaFX</id>
              </State>
              <State>
                <id>JavaScript</id>
              </State>
              <State>
                <id>JavadocJava</id>
              </State>
              <State>
                <id>Kotlin</id>
              </State>
              <State>
                <id>LoggingJava</id>
              </State>
              <State>
                <id>Manifest</id>
              </State>
              <State>
                <id>Markdown</id>
              </State>
              <State>
                <id>MemoryJava</id>
              </State>
              <State>
                <id>Method metricsGroovy</id>
              </State>
              <State>
                <id>Method metricsJava</id>
              </State>
              <State>
                <id>Naming conventionsGroovy</id>
              </State>
              <State>
                <id>Naming conventionsJava</id>
              </State>
              <State>
                <id>Node.jsJavaScript</id>
              </State>
              <State>
                <id>Numeric issuesJava</id>
              </State>
              <State>
                <id>OSGi</id>
              </State>
              <State>
                <id>OtherGroovy</id>
              </State>
              <State>
                <id>Pages Navigation Model</id>
              </State>
              <State>
                <id>PerformanceJava</id>
              </State>
              <State>
                <id>Plugin DevKit</id>
              </State>
              <State>
                <id>PortabilityJava</id>
              </State>
              <State>
                <id>Potentially confusing code constructsGroovy</id>
              </State>
              <State>
                <id>Potentially confusing code constructsJavaScript</id>
              </State>
              <State>
                <id>Probable bugsCoffeeScript</id>
              </State>
              <State>
                <id>Probable bugsGradle</id>
              </State>
              <State>
                <id>Probable bugsGroovy</id>
              </State>
              <State>
                <id>Probable bugsJava</id>
              </State>
              <State>
                <id>Probable bugsJavaScript</id>
              </State>
              <State>
                <id>Properties Files</id>
              </State>
              <State>
                <id>Properties FilesJava</id>
              </State>
              <State>
                <id>RELAX NG</id>
              </State>
              <State>
                <id>RESTful Web Service</id>
              </State>
              <State>
                <id>Resource managementJava</id>
              </State>
              <State>
                <id>SQL</id>
              </State>
              <State>
                <id>Sass/SCSS</id>
              </State>
              <State>
                <id>SecurityJava</id>
              </State>
              <State>
                <id>Serialization issuesJava</id>
              </State>
              <State>
                <id>SetupSpring CoreSpring</id>
              </State>
              <State>
                <id>Spring</id>
              </State>
              <State>
                <id>Spring BootSpring</id>
              </State>
              <State>
                <id>Spring CoreSpring</id>
              </State>
              <State>
                <id>Struts</id>
              </State>
              <State>
                <id>Struts 1Struts</id>
              </State>
              <State>
                <id>Struts 2Struts</id>
              </State>
              <State>
                <id>Style issuesKotlin</id>
              </State>
              <State>
                <id>TestNGJava</id>
              </State>
              <State>
                <id>Threading issuesGroovy</id>
              </State>
              <State>
                <id>Threading issuesJava</id>
              </State>
              <State>
                <id>TypeScript</id>
              </State>
              <State>
                <id>UI Form</id>
              </State>
              <State>
                <id>Velocity</id>
              </State>
              <State>
                <id>Verbose or redundant code constructsJava</id>
              </State>
              <State>
                <id>VisibilityJava</id>
              </State>
              <State>
                <id>Vue</id>
              </State>
              <State>
                <id>Web Services</id>
              </State>
              <State>
                <id>XML</id>
              </State>
              <State>
                <id>XMLSpring CoreSpring</id>
              </State>
              <State>
                <id>XPath</id>
              </State>
              <State>
                <id>YAML</id>
              </State>
              <State>
                <id>docker-compose</id>
              </State>
            </expanded-state>
            <selected-state>
              <State>
                <id>Ali-Check</id>
              </State>
            </selected-state>
          </profile-state>
        </entry>
      </component>
      <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.7" project-jdk-type="JavaSDK" />
      <component name="ProjectViewState">
        <option name="hideEmptyMiddlePackages" value="true" />
        <option name="showExcludedFiles" value="true" />
        <option name="showLibraryContents" value="true" />
        <option name="showVisibilityIcons" value="true" />
      </component>
      <component name="PropertiesComponent">
        <property name="JavaScriptWeakerCompletionTypeGuess" value="true" />
        <property name="last_opened_file_path" value="E:/IDEA/a-tm" />
        <property name="node.js.path.for.package.eslint" value="project" />
        <property name="node.js.path.for.package.standard" value="project" />
        <property name="node.js.path.for.package.stylelint" value="project" />
        <property name="node.js.path.for.package.tslint" value="project" />
        <property name="node.js.selected.package.eslint" value="" />
        <property name="node.js.selected.package.standard" value="" />
        <property name="node.js.selected.package.stylelint" value="" />
        <property name="node.js.selected.package.tslint" value="" />
        <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
        <property name="nodejs_npm_path_reset_for_default_project" value="true" />
        <property name="project.structure.last.edited" value="Problems" />
        <property name="project.structure.proportion" value="0.15" />
        <property name="project.structure.side.proportion" value="0.2" />
        <property name="settings.editor.selected.configurable" value="vcs.Subversion" />
      </component>
      <component name="RunDashboard">
        <option name="ruleStates">
          <list>
            <RuleState>
              <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
            </RuleState>
            <RuleState>
              <option name="name" value="StatusDashboardGroupingRule" />
            </RuleState>
          </list>
        </option>
      </component>
      <component name="RunManager">
        <configuration default="true" type="Applet">
          <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
          <method v="2">
            <option name="Make" enabled="true" />
          </method>
        </configuration>
        <configuration default="true" type="Application" factoryName="Application">
          <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
          <method v="2">
            <option name="Make" enabled="true" />
          </method>
        </configuration>
        <configuration default="true" type="JUnit" factoryName="JUnit">
          <option name="TEST_OBJECT" value="class" />
          <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
          <method v="2">
            <option name="Make" enabled="true" />
          </method>
        </configuration>
        <configuration default="true" type="TestNG">
          <option name="TEST_OBJECT" value="CLASS" />
          <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
          <properties />
          <listeners />
          <method v="2">
            <option name="Make" enabled="true" />
          </method>
        </configuration>
        <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType">
          <module name="" />
          <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
          <option name="PROGRAM_PARAMETERS" />
          <predefined_log_file enabled="true" id="idea.log" />
          <method v="2">
            <option name="Make" enabled="true" />
          </method>
        </configuration>
      </component>
      <component name="SvnConfiguration">
        <configuration useDefault="false">D:\software\TortoiseSVN\svnConf</configuration>
      </component>
      <component name="masterDetails">
        <states>
          <state key="ArquillianSettingsConfigurable.UI">
            <settings>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="GlobalLibrariesConfigurable.UI">
            <settings>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="JdkListConfigurable.UI">
            <settings>
              <last-edited>1.7</last-edited>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="ProjectJDKs.UI">
            <settings>
              <last-edited>1.8</last-edited>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="ProjectLibrariesConfigurable.UI">
            <settings>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="ScopeChooserConfigurable.UI">
            <settings>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
        </states>
      </component>
    </defaultProject>
  </component>
</application>